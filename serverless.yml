service: olive
frameworkVersion: "3"

useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  environment:
    TOKEN: ${env:TOKEN}
    QRCODE_BUCKET_NAME: ${env:QRCODE_BUCKET_NAME}
    QRCODE_TABLE_NAME: ${env:QRCODE_TABLE_NAME}
    ENVIRONMENT: ${env:ENVIRONMENT}
    GA_FORM_SUBMITION_QUEUE_URL:
      Fn::GetAtt:
        - gaFormSubmition
        - QueueUrl
    GA_TOURS_TABLE_NAME: ${env:GA_TOURS_TABLE_NAME}
    GOOGLE_DRIVE_CREDENTIALS: ${env:GOOGLE_DRIVE_CREDENTIALS}
    GOOGLE_DRIVE_TOKEN: ${env:GOOGLE_DRIVE_TOKEN}
    GOOGLE_DRIVE_BASE_INSURANCE_FILE: ${env:GOOGLE_DRIVE_BASE_INSURANCE_FILE}
    GOOGLE_DRIVE_PARENT_PDF_FOLDER: ${env:GOOGLE_DRIVE_PARENT_PDF_FOLDER}
    GOOGLE_DRIVE_PARENT_INSURANCE_FOLDER: ${env:GOOGLE_DRIVE_PARENT_INSURANCE_FOLDER}
    OLIVE_TOOLS_SECRET: ${env:OLIVE_TOOLS_SECRET}
    GA_FORM_TOPIC_ARN:
      Ref: gaFormTopic
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:GetItem"
            - "dynamodb:Query"
          Resource:
            - "Fn::GetAtt": [gaToursTable, Arn]
        - Effect: Allow
          Action:
            - "sqs:SendMessage"
            - "sqs:ReceiveMessage"
          Resource:
            - "Fn::GetAtt": [gaFormSubmition, Arn]
        - Effect: Allow
          Action:
            - "sns:Publish"
          Resource:
            - "Ref": gaFormTopic

resources:
  Resources:
    gaFormSubmition:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ga-form-submition
    gaToursTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ga-tours-atv
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: "tourDate"
            AttributeType: S
          - AttributeName: "id"
            AttributeType: S
        KeySchema:
          - AttributeName: "tourDate"
            KeyType: HASH
          - AttributeName: "id"
            KeyType: RANGE
    gaFormTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ga-form-topic
    gaFormTopicSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        TopicArn:
          Ref: gaFormTopic
        Protocol: sqs
        Endpoint:
          Fn::GetAtt:
            - gaFormSubmition
            - Arn
        RawMessageDelivery: true

functions:
  gaForm:
    handler: src/ga-automation/index.formSubmitHandler
    events:
      - httpApi:
          path: /ga/form
          method: post
  gaFormMessage:
    handler: src/ga-automation/index.formSubmitMessageHandler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - gaFormSubmition
              - Arn
  getTourAtvsHandler:
    handler: src/ga-automation/index.getTourAtvsHandler
    events:
      - httpApi:
          path: /ga/rides
          method: get
  insuranceScheduleHandler:
    handler: src/ga-automation/index.insuranceScheduleHandler
    events:
      - schedule: cron(0 9 * * ? *) # utc-0 which is 6am in brazil
  gaFormPublishHandler:
    handler: src/ga-automation/index.gaFormPublishHandler
    events:
      - httpApi:
          path: /ga/form/publish
          method: post

plugins:
  - serverless-offline-sqs
  - serverless-offline

custom:
  serverless-offline-sqs:
    autoCreate: true
    apiVersion: "2012-11-05"
    endpoint: http://0.0.0.0:9324
    region: eu-west-1
    accessKeyId: root
    secretAccessKey: root
    skipCacheInvalidation: false